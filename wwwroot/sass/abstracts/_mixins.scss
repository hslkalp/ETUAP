// * Breakpoint

@mixin breakpoint($device: 'mobile') {
	@if ($device == 'mobile') {
		@media (min-width: 575.98px) {
			@content;
		}
	} @else if($device == 'tablet') {
		@media (min-width: 767.98px) {
			@content;
		}
	} @else if($device == 'desktop') {
		@media (min-width: 991.98px) {
			@content;
		}
	} @else if($device == 'desktop-lg') {
		@media (min-width: 1199.98px) {
			@content;
		}
	} @else if($device == 'desktop-xlg') {
		@media (min-width: 1399.98px) {
			@content;
		}
	}
}

// * Wrapper

@mixin wrapper(
	$max-width: 1200px,
	$padding-gap-horizontal: 0px,
	$padding-gap-vertical: 0px,
	$margin-vertical: 0px
) {
	position: relative;
	max-width: $max-width;
	height: 100%;
	margin: $margin-vertical auto;
	padding: $padding-gap-horizontal $padding-gap-vertical;
	@include breakpoint('desktop-lg') {
		padding: 0px;
	}
}

// * Display flex

@mixin flex-container(
	$direction: row,
	$wrap: nowrap,
	$justify-content: flex-start,
	$align-items: stretch,
	$align-content: normal
) {
	display: flex;
	flex-direction: $direction;
	flex-wrap: $wrap;
	justify-content: $justify-content;
	align-items: $align-items;
	align-content: $align-content;
}

@mixin flex-items(
	$order,
	$flex-grow: 0,
	$flex-shrink: 1,
	$flex-basis: auto,
	$align-self: flex-start
) {
	order: $order;
	flex-grow: $flex-grow;
	flex-shrink: $flex-shrink;
	flex-basis: $flex-basis;
	align-self: $align-self;
}

// * Buttons

@mixin button(
	$padding-gap-horizontal: 0px,
	$padding-gap-vertical: 0px,
	$font-size: 16px,
	$border-color: transparent,
	$border-radius: none,
	$border-width: 0,
	$background-color: transparent,
	$color: black
) {
	font-size: $font-size;
	padding: $padding-gap-horizontal $padding-gap-vertical;
	border: $border-width solid $border-color;
	background-color: $background-color;
	cursor: pointer;
	outline: none;
	color: $color;
}
